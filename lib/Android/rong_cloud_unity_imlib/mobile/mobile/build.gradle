apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res.srcDirs = ['res']
            jniLibs.srcDirs = ['libs']
        }
    }
    lintOptions {
        disable 'TrustAllX509TrustManager'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api project(':IMLib')
    implementation files('libs/classes.jar')
}
task deleteOldJar(type: Delete) {
    delete 'release/rongcloud.jar'
}
task exportJar(type: Copy) {
    from('build/intermediates/packaged-classes/release/classes.jar')
    into('release/')
    rename('classes.jar', 'rongcloud.jar')
}

task libs(type: Copy) {
    dependsOn build
    from configurations.compile
    into "${project.projectDir}/out/libs"
}
exportJar.dependsOn(deleteOldJar, build)
libs.dependsOn(deleteOldJar, build)